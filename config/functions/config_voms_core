##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004. 
# See http://www.eu-egee.org/partners/ for details on the copyright 
# holders.  
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
#    http://www.apache.org/licenses/LICENSE-2.0 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS 
# OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
##############################################################################
#
# NAME : 	    config_voms_core
#
# DESCRIPTION : This function configures the voms core for mysql.
 
# AUTHORS :     yaim-contact@cern.ch
#
# NOTES : 
#
# YAIM MODULE:  glite-yaim-voms
#                 
##############################################################################

config_voms_core_check () {

requires $1 VOS VO__VOMS_DB_NAME VO__VOMS_DB_USER VO__VOMS_DB_USER_PASSWORD VO__VOMS_PORT VOMS_DB_TYPE 
if [ $? -eq 1 ]; then   
    exit 1   
fi   
     
# The following variables can be defined per VOMS server or per VO   
if [ ! "VOMS_CORE_TIMEOUT" ]; then   
  requires $1 VO__VOMS_CORE_TIMEOUT   
  if [ $? -eq 1 ]; then   
    exit 1   
  fi   
fi 


if [ "x${VOMS_DB_TYPE}" == "xoracle" ]; then
  requires $1 VOMS_ORACLE_LIBRARY
  if [ $? -eq 1 ]; then
    exit 1
  fi
fi

if [ "x${VOMS_DB_TYPE}" == "xmysql" ]; then
  requires $1 VOMS_MYSQL_LIBRARY
  if [ $? -eq 1 ]; then
    exit 1
  fi
fi

}

config_voms_core_setenv () {

yaimgridenv_set GLITE_LOCATION_VAR ${GLITE_LOCATION_VAR}
yaimgridenv_set GLITE_LOCATION_LOG ${GLITE_LOCATION_LOG}
yaimgridenv_set GLITE_LOCATION_TMP ${GLITE_LOCATION_TMP}

}

config_voms_core () {

if [ "x${VOMS_ADMIN_INSTALL}" == "xno" ]; then

for vo in ${VOS}; do

  yaimlog DEBUG "Configure voms core parameters for VO ${vo}"

  command=" --voms-vo ${vo} --db-type ${VOMS_DB_TYPE}"

  vars="VOMS_DB_NAME
        VOMS_DB_USER
        VOMS_DB_USER_PASSWORD
        VOMS_PORT"

  options=(db
           voms-name
           voms-pwd
           sqlloc
           port)

  yaimlog DEBUG "Building up the command"
  j=0
  for i in ${vars}; do
    value=`get_vo_param ${vo} $i`
    if [ "x${value}" == "x" ]; then
      value=${!i}
    fi
    command="$command --${options[$j]} $value"
    j=`expr $j + 1`
  done

  yaimlog DEBUG "The command is ${command}"
  yaimlog DEBUG "Configure voms core for VO ${vo}"
  ${GLITE_LOCATION}/libexec/voms/voms_install_db ${command}

  value=`get_vo_param ${vo} VOMS_CORE_TIMEOUT`
  if [ "x${value}" == "xyes" ]; then
    timeout=${value}
  else
    timeout=${VOMS_CORE_TIMEOUT}
  fi
  echo "--timeout=${timeout}" >> ${GLITE_LOCATION}/etc/voms/${vo}/voms.conf
  voms_hostname=`hostname -f`
  echo "--uri=${voms_hostname}"  >> ${GLITE_LOCATION}/etc/voms/${vo}/voms.conf

done #VOs

fi #voms admin not installed

yaimlog DEBUG "Start voms core"
${GLITE_LOCATION}/etc/init.d/voms start

}


